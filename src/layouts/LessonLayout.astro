---
import Layout from "./Layout.astro";
import { getFormattedDate } from "@/utils/all";

const { frontmatter, lessons: rawLessons } = Astro.props;

type LessonItem = { title: string; url: string };
type LessonsType = Record<string, LessonItem[]>;

const lessons = rawLessons as LessonsType;
---

<Layout title={frontmatter.title}>
  <div class="flex flex-col lg:flex-row max-w-[1200px] mx-auto mt-14 px-4 lg:px-0 gap-8">

    <aside class="hidden lg:block w-64 sticky top-20 h-[calc(100vh-80px)] overflow-y-auto border-r border-gray-200 pr-4">
    <h2 class="text-xl font-bold mb-4">Lezioni</h2>

    <!-- Search bar -->
    <input
      type="text"
      placeholder="Cerca..."
      id="lesson-search"
      class="w-full mb-4 px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400"
    />

    <!-- Lista lezioni -->
    <div id="lessons-list">
      {Object.entries(lessons).map(([language, lessonList]) => (
        <div class="mb-4" data-language={language}>
          <h3 class="font-semibold">{language}</h3>
          <ul class="space-y-2 pl-2">
            {lessonList.map(lesson => (
              <li data-title={lesson.title.toLowerCase()}>
                <a
                  href={lesson.url}
                  class={`block px-2 py-1 rounded hover:bg-gray-100 transition
                    ${lesson.url === frontmatter.url ? "bg-gray-200 font-semibold" : ""}`}
                >
                  {lesson.title}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </aside>

    <!-- Contenuto principale -->
    <main class="flex-1">
      <div class="mb-6">
        <h1 class="text-4xl font-bold">{frontmatter.title}</h1>
        <div class="flex flex-wrap gap-4 text-gray-600 text-sm">
          <span>‚úçÔ∏è {frontmatter.author}</span>
          {frontmatter.publishDate && <span>üìÖ {getFormattedDate(frontmatter.publishDate)}</span>}
          {frontmatter.subject && <span>üìò {frontmatter.subject}</span>}
          {frontmatter.category && <span>üè∑Ô∏è {frontmatter.category}</span>}
        </div>
        {frontmatter.tags && frontmatter.tags.length > 0 && (
          <div class="mt-2 flex flex-wrap gap-2">
            {frontmatter.tags.map(tag => (
              <span class="bg-gray-200 px-2 py-1 rounded text-sm">{tag}</span>
            ))}
          </div>
        )}
      </div>

      <div class="prose prose-lg">
        <slot />
      </div>

      <div class="text-center mt-8">
        <a
          href="/ImparareFacile/informatica"
          class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition"
        >
          ‚Üê Back to Informatica
        </a>
      </div>
    </main>
  </div>
</Layout>


<script>
  const searchInput = document.getElementById("lesson-search") as HTMLInputElement | null;
  const lessonContainers = Array.from(document.querySelectorAll<HTMLDivElement>("#lessons-list > div"));

  searchInput?.addEventListener("input", () => {
    const query = searchInput.value.toLowerCase();

    lessonContainers.forEach(container => {
      let anyVisible = false;

      const items = Array.from(container.querySelectorAll<HTMLLIElement>("li"));
      items.forEach(item => {
        const title = item.dataset.title || "";
        const match = title.includes(query);
        item.style.display = match ? "block" : "none";
        if (match) anyVisible = true;
      });

      container.style.display = anyVisible ? "block" : "none";
    });
  });
</script>
