---
import Layout from "./Layout.astro";
import { getFormattedDate } from "@/utils/all";
import { Icon } from "astro-icon/components";

const { frontmatter, lessons: rawLessons } = Astro.props;

type LessonItem = { title: string; url: string };
type LessonsType = Record<string, LessonItem[]>;

const lessons = rawLessons as LessonsType;
---

<Layout title={frontmatter.title}>
  <div
    class="flex flex-col lg:flex-row max-w-[1200px] mx-auto mt-14 px-4 lg:px-0 gap-8">
    <!-- Sidebar lezioni -->
    <aside
      class="hidden lg:block w-64 sticky top-20 h-[calc(100vh-80px)] overflow-y-auto border-r border-gray-200 pr-4">
      <h2 class="text-xl font-bold mb-4">Lezioni</h2>

      <!-- Search bar -->
      <input
        type="text"
        placeholder="Cerca..."
        id="lesson-search"
        class="w-full mb-4 px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400"
      />

      <!-- Lista lezioni -->
      <div id="lessons-list">
        {
          Object.entries(lessons).map(([language, lessonList]) => (
            <div class="mb-4" data-language={language}>
              <h3 class="font-semibold">{language}</h3>
              <ul class="space-y-2 pl-2">
                {lessonList.map((lesson) => (
                  <li data-title={lesson.title.toLowerCase()}>
                    <a
                      href={lesson.url}
                      class={`block px-2 py-1 rounded hover:bg-gray-100 transition
                      ${lesson.url === frontmatter.url ? "bg-gray-200 font-semibold" : ""}`}>
                      {lesson.title}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          ))
        }
      </div>
    </aside>

    <!-- Contenuto centrale + TOC -->
    <div class="flex-1 flex gap-8">
      <!-- Contenuto principale -->
      <div class="prose prose-lg mt-0 flex-1" id="lesson-content">
        <div class="mb-6">
          <!-- Pulsanti azioni -->
          <div class="flex justify-start gap-3 mt-4">
            <a
              href="/ImparareFacile/informatica"
              class="inline-flex items-center gap-1 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition text-sm no-underline">
              <Icon name="fa6-solid:arrow-left" class="h-5 w-5" />
              Torna Indietro
            </a>

            <a
              id="report-link"
              href="#"
              target="_blank"
              class="inline-flex items-center gap-1 bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition text-sm no-underline">
              <Icon name="fa6-brands:github" class="h-5 w-5" />
              Segnala errore
            </a>

            <script type="module">
              const link = document.getElementById("report-link");
              const currentURL = window.location.href;
              const githubURL = `https://github.com/DennisTurco/ImparareFacile/issues/new?title=Errore+nella+pagina&body=Pagina+${encodeURIComponent(currentURL)}`;
              link.href = githubURL;
            </script>
          </div>
        </div>

        <h1 class="text-5xl font-extrabold tracking-tight">{frontmatter.title}</h1>

        <div class="mt-3 flex flex-wrap items-center gap-x-3 text-sm text-gray-600">
          <span class="flex items-center gap-1">
            ‚úçÔ∏è <span class="font-medium">{frontmatter.author}</span>
          </span>

          {frontmatter.category && (
            <span class="flex items-center gap-1">
              üè∑Ô∏è <span>{frontmatter.category}</span>
            </span>
          )}

          {frontmatter.subject && (
            <span class="flex items-center gap-1">
              üìò <span>{frontmatter.subject}</span>
            </span>
          )}
        </div>

        {frontmatter.lastUpdateDate && (
          <div class="mt-1 text-xs text-gray-400 italic">
            Ultima modifica:{" "}
            <time datetime={frontmatter.lastUpdateDate}>
              {getFormattedDate(frontmatter.lastUpdateDate)}
            </time>
          </div>
        )}

        {frontmatter.tags && frontmatter.tags.length > 0 && (
          <div class="mt-4 flex flex-wrap gap-2">
            {frontmatter.tags.map((tag) => (
              <span
                class="rounded-full bg-gray-100 px-3 py-1 text-xs font-medium text-gray-700 hover:bg-gray-200 transition"
              >
                #{tag}
              </span>
            ))}
          </div>
        )}

        {frontmatter.videoLesson && (
          <div class="mt-6">
            <a
              href="/ImparareFacile/videolezioni"
              class="inline-flex items-center gap-2 rounded-lg bg-sky-500 px-4 py-2 text-sm font-semibold text-white shadow-md transition hover:bg-sky-600 no-underline"
            >
              üé• Guarda la videolezione
            </a>
          </div>
        )}


        <slot />

        <div class="text-center mt-8">
          <a
            href="/ImparareFacile/informatica"
            class="inline-flex items-center gap-2 bg-gray-200 px-5 py-3 rounded-md hover:bg-gray-300 transition no-underline">
            <Icon name="fa6-solid:arrow-left" class="h-5 w-5" />
            Torna Indietro
          </a>
        </div>
      </div>

      <!-- Bottone torna su -->
      <button
        id="scrollTopBtn"
        class="hidden fixed bottom-6 right-6 z-50 rounded-full bg-blue-600 p-3 text-white shadow-lg hover:bg-blue-700 transition cursor-pointer"
        aria-label="Torna all'inizio"
      >
        <Icon name="fa6-solid:arrow-up" class="h-5 w-5" />
      </button>

      <!-- Bottone Prenota una lezione -->
      <a
        href="/ImparareFacile/insegnanti"
        class="group fixed bottom-6 left-6 z-50 flex items-center justify-center w-12 h-12 overflow-hidden rounded-full bg-green-600 text-white shadow-lg hover:w-auto hover:px-4 hover:bg-green-700"
        aria-label="Prenota una lezione"
      >
        <Icon name="fa6-solid:calendar-plus" class="h-5 w-5" />
        <span
          class="absolute left-12 whitespace-nowrap text-sm font-medium group-hover:translate-x-0 group-hover:opacity-300 group-hover:relative group-hover:left-2"
        >
          Prenota una lezione
        </span>
      </a>

      <!-- Table of Contents -->
      <aside
        class="hidden xl:block w-64 sticky h-[calc(100vh-80px)] overflow-y-auto border-l border-gray-200 pl-4">
        <h2 class="font-bold mb-4">Indice</h2>
        <ul id="toc" class="space-y-2 text-sm"></ul>
      </aside>
    </div>
  </div>
</Layout>

<!-- Script ricerca lezioni -->
<script>
  const searchInput = document.getElementById(
    "lesson-search"
  ) as HTMLInputElement | null;
  const lessonContainers = Array.from(
    document.querySelectorAll<HTMLDivElement>("#lessons-list > div")
  );
  searchInput?.addEventListener("input", () => {
    const query = searchInput.value.toLowerCase();
    lessonContainers.forEach((container) => {
      let anyVisible = false;
      const items = Array.from(container.querySelectorAll<HTMLLIElement>("li"));
      items.forEach((item) => {
        const title = item.dataset.title || "";
        const match = title.includes(query);
        item.style.display = match ? "block" : "none";
        if (match) anyVisible = true;
      });
      container.style.display = anyVisible ? "block" : "none";
    });
  });
</script>

<!-- Script Table of Contents -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const content = document.getElementById("lesson-content");
    const toc = document.getElementById("toc");
    if (!content || !toc) return;

    const headers = Array.from(content.querySelectorAll("h2, h3, h4"));
    headers.forEach((header) => {
      const id =
        header.id ||
        header.textContent?.trim().toLowerCase().replace(/\s+/g, "-");
      if (!id) return;
      header.id = id;

      const li = document.createElement("li");
      li.className =
        header.tagName.toLowerCase() === "h3"
          ? "ml-4"
          : header.tagName.toLowerCase() === "h4"
            ? "ml-8"
            : "";
      const a = document.createElement("a");
      a.href = `#${id}`;
      a.innerText = header.textContent || "";
      a.className = "hover:text-blue-600 transition";
      li.appendChild(a);
      toc.appendChild(li);
    });
  });
</script>


<script>
  const scrollTopBtn = document.getElementById("scrollTopBtn");

  window.addEventListener("scroll", () => {
    if (window.scrollY > 300) {
      scrollTopBtn?.classList.remove("hidden");
    } else {
      scrollTopBtn?.classList.add("hidden");
    }
  });

  scrollTopBtn?.addEventListener("click", () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  });
</script>

